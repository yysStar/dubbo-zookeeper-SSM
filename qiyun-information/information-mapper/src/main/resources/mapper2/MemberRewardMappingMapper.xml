<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyun.mapper2.MemberRewardMappingMapper">
  <resultMap id="BaseResultMap" type="com.qiyun.model2.MemberRewardMapping">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rewarder" jdbcType="VARCHAR" property="rewarder" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="be_rewarder" jdbcType="VARCHAR" property="beRewarder" />
    <result column="cloud_num" jdbcType="INTEGER" property="cloudNum" />
    <result column="reward_datetime" jdbcType="TIMESTAMP" property="rewardDatetime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qiyun.model2.MemberRewardMapping">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rewarder, picture, be_rewarder, cloud_num, reward_datetime
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
    <!--com.qiyun.dto.RewarderDTO-->
  <select id="selectByBeRewarderAccount" parameterType="String" resultMap="BaseResultMap">
    SELECT * FROM member_reward_mapping
    where  be_rewarder=#{beRewarder}
    ORDER BY cloud_num DESC
    LIMIT 8
  </select>



  <select id="selectByExampleWithBLOBs" parameterType="com.qiyun.model2.MemberRewardMappingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member_reward_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qiyun.model2.MemberRewardMappingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from member_reward_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member_reward_mapping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_reward_mapping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.MemberRewardMapping">
    insert into member_reward_mapping (id, rewarder, picture, 
      be_rewarder, cloud_num, reward_datetime, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{rewarder,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{beRewarder,jdbcType=VARCHAR}, #{cloudNum,jdbcType=INTEGER}, #{rewardDatetime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.MemberRewardMapping">
    insert into member_reward_mapping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rewarder != null">
        rewarder,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="beRewarder != null">
        be_rewarder,
      </if>
      <if test="cloudNum != null">
        cloud_num,
      </if>
      <if test="rewardDatetime != null">
        reward_datetime,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rewarder != null">
        #{rewarder,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="beRewarder != null">
        #{beRewarder,jdbcType=VARCHAR},
      </if>
      <if test="cloudNum != null">
        #{cloudNum,jdbcType=INTEGER},
      </if>
      <if test="rewardDatetime != null">
        #{rewardDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.MemberRewardMapping">
    update member_reward_mapping
    <set>
      <if test="rewarder != null">
        rewarder = #{rewarder,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="beRewarder != null">
        be_rewarder = #{beRewarder,jdbcType=VARCHAR},
      </if>
      <if test="cloudNum != null">
        cloud_num = #{cloudNum,jdbcType=INTEGER},
      </if>
      <if test="rewardDatetime != null">
        reward_datetime = #{rewardDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qiyun.model2.MemberRewardMapping">
    update member_reward_mapping
    set rewarder = #{rewarder,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      be_rewarder = #{beRewarder,jdbcType=VARCHAR},
      cloud_num = #{cloudNum,jdbcType=INTEGER},
      reward_datetime = #{rewardDatetime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.MemberRewardMapping">
    update member_reward_mapping
    set rewarder = #{rewarder,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      be_rewarder = #{beRewarder,jdbcType=VARCHAR},
      cloud_num = #{cloudNum,jdbcType=INTEGER},
      reward_datetime = #{rewardDatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>