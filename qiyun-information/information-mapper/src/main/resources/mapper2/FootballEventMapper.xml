<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.FootballEventMapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.FootballEvent" >
    <result column="schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="q_id" property="qId" jdbcType="VARCHAR" />
    <result column="g_name" property="gName" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    schedule_id, mark, type, time, name, q_id, g_name, version
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.FootballEventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from football_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.qiyun.model2.FootballEvent" >
    insert into football_event (schedule_id, mark, type, 
      time, name, q_id, g_name, 
      version)
    values (#{scheduleId,jdbcType=INTEGER}, #{mark,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{qId,jdbcType=VARCHAR}, #{gName,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.FootballEvent" >
    insert into football_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scheduleId != null" >
        schedule_id,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="qId != null" >
        q_id,
      </if>
      <if test="gName != null" >
        g_name,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scheduleId != null" >
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="qId != null" >
        #{qId,jdbcType=VARCHAR},
      </if>
      <if test="gName != null" >
        #{gName,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List" />
    FROM football_event
    WHERE schedule_id =  #{id,jdbcType=INTEGER}
  </select>

  <select id="selectById2" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    FROM football_event
    WHERE version =  #{id,jdbcType=VARCHAR}
  </select>


  <!--<select id="selectByIdAndVersion" resultMap="BaseResultMap" parameterType="map">-->
    <!--SELECT-->
    <!--<include refid="Base_Column_List" />-->
    <!--FROM football_event-->
    <!--WHERE schedule_id =  #{id,jdbcType=INTEGER}-->
    <!--AND version = #{version,jdbcType=INTEGER}-->
  <!--</select>-->

  <!--<select id="getMaxVersion" resultType="java.lang.Integer">-->
    <!--SELECT max(version)-->
    <!--from football_event-->
    <!--WHERE schedule_id = #{scheduleId,jdbcType=INTEGER}-->
  <!--</select>-->

  <!--<select id="getMaxVersionCount" resultType="java.lang.Integer">-->
    <!--SELECT count(schedule_id)-->
    <!--from football_event-->
    <!--WHERE schedule_id = #{scheduleId,jdbcType=INTEGER}-->
    <!--AND version = #{version,jdbcType=INTEGER}-->
  <!--</select>-->
</mapper>