<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.ChampionPlanMapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.ChampionPlan" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="multiple" property="multiple" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="per_amount" property="perAmount" jdbcType="INTEGER" />
    <result column="bingo_status" property="bingoStatus" jdbcType="INTEGER" />
    <result column="bingo_money" property="bingoMoney" jdbcType="DECIMAL" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ticket_status" property="ticketStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, type, multiple, amount, per_amount, bingo_status, bingo_money, account, 
    create_time, ticket_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.ChampionPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from champion_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from champion_plan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from champion_plan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.ChampionPlan"
          useGeneratedKeys="true" keyProperty="id">
    insert into champion_plan (id, order_no, type, 
      multiple, amount, per_amount, 
      bingo_status, bingo_money, account, 
      create_time, ticket_status)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{multiple,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{perAmount,jdbcType=INTEGER}, 
      #{bingoStatus,jdbcType=INTEGER}, #{bingoMoney,jdbcType=DECIMAL}, #{account,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{ticketStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.ChampionPlan"
          useGeneratedKeys="true" keyProperty="id">
    insert into champion_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="multiple != null" >
        multiple,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="perAmount != null" >
        per_amount,
      </if>
      <if test="bingoStatus != null" >
        bingo_status,
      </if>
      <if test="bingoMoney != null" >
        bingo_money,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ticketStatus != null" >
        ticket_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="multiple != null" >
        #{multiple,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="perAmount != null" >
        #{perAmount,jdbcType=INTEGER},
      </if>
      <if test="bingoStatus != null" >
        #{bingoStatus,jdbcType=INTEGER},
      </if>
      <if test="bingoMoney != null" >
        #{bingoMoney,jdbcType=DECIMAL},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketStatus != null" >
        #{ticketStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.ChampionPlan" >
    update champion_plan
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="multiple != null" >
        multiple = #{multiple,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="perAmount != null" >
        per_amount = #{perAmount,jdbcType=INTEGER},
      </if>
      <if test="bingoStatus != null" >
        bingo_status = #{bingoStatus,jdbcType=INTEGER},
      </if>
      <if test="bingoMoney != null" >
        bingo_money = #{bingoMoney,jdbcType=DECIMAL},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketStatus != null" >
        ticket_status = #{ticketStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.ChampionPlan" >
    update champion_plan
    set order_no = #{orderNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      multiple = #{multiple,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      per_amount = #{perAmount,jdbcType=INTEGER},
      bingo_status = #{bingoStatus,jdbcType=INTEGER},
      bingo_money = #{bingoMoney,jdbcType=DECIMAL},
      account = #{account,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ticket_status = #{ticketStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTicketIngList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from champion_plan
    where ticket_status = 1
  </select>
  <select id="selectByOrderNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from champion_plan
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </select>
  <resultMap id="championPlanDTO" type="com.qiyun.dto.ChampionPlanDTO">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="multiple" property="multiple" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="per_amount" property="perAmount" jdbcType="INTEGER" />
    <result column="bingo_status" property="bingoStatus" jdbcType="INTEGER" />
    <result column="bingo_money" property="bingoMoney" jdbcType="DECIMAL" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ticket_status" property="ticketStatus" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectByAccount" resultMap="championPlanDTO">
    select
     *
    from champion_plan
    where account = #{account,jdbcType=VARCHAR}
    ORDER BY
	    create_time DESC
  </select>
  <select id="selectBingoByAccount" resultMap="championPlanDTO">
    select
     *
    from champion_plan
    where account = #{account,jdbcType=VARCHAR}
    AND ticket_status = 2
    AND bingo_status = 1
    ORDER BY
	    create_time DESC
  </select>
  <resultMap id="championPlanDetailsDTO" type="com.qiyun.dto.ChampionPlanDetailsDTO">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="multiple" property="multiple" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="per_amount" property="perAmount" jdbcType="INTEGER" />
    <result column="bingo_status" property="bingoStatus" jdbcType="INTEGER" />
    <result column="bingo_money" property="bingoMoney" jdbcType="DECIMAL" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ticket_status" property="ticketStatus" jdbcType="INTEGER" />
    <result column="PICTURE" property="picture" jdbcType="INTEGER" />
    <result column="username" property="userName" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectDetailsById" resultMap="championPlanDetailsDTO">
    SELECT
        P.*, M.PICTURE,
        M.username
    FROM
        champion_plan P
    LEFT JOIN member M ON P.account = M.ACCOUNT
    WHERE
        P.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllList" resultMap="championPlanDetailsDTO">
    SELECT
        P.*, M.PICTURE,
        M.username
    FROM
        champion_plan P
    LEFT JOIN member M ON P.account = M.ACCOUNT
    WHERE
        1 = 1
        <if test="account != null">
          AND (P.account LIKE '%' #{account,jdbcType=VARCHAR} '%'
              OR M.username LIKE '%' #{account,jdbcType=VARCHAR} '%')
        </if>
        <if test="planId != null">
          AND P.id = #{planId,jdbcType=INTEGER}
        </if>
        <if test="startTime != null">
          AND P.create_time > #{startTime,jdbcType=TIMESTAMP} AND P.create_time &lt; #{endTime,jdbcType=TIMESTAMP}
        </if>
  </select>
</mapper>