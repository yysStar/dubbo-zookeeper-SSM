<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.BasketballTeam2Mapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.BasketballTeam2" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="FULL_TEAM_NAME" property="fullTeamName" jdbcType="VARCHAR" />
    <result column="SHORT_TEAM_NAME" property="shortTeamName" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="MARK" property="mark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, FULL_TEAM_NAME, SHORT_TEAM_NAME, CONTENT, MARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.BasketballTeam2Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from basketball_team
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from basketball_team
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from basketball_team
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.BasketballTeam2" >
    insert into basketball_team (Id, FULL_TEAM_NAME, SHORT_TEAM_NAME, 
      CONTENT, MARK)
    values (#{id,jdbcType=INTEGER}, #{fullTeamName,jdbcType=VARCHAR}, #{shortTeamName,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.BasketballTeam2" >
    insert into basketball_team
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="fullTeamName != null" >
        FULL_TEAM_NAME,
      </if>
      <if test="shortTeamName != null" >
        SHORT_TEAM_NAME,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="mark != null" >
        MARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullTeamName != null" >
        #{fullTeamName,jdbcType=VARCHAR},
      </if>
      <if test="shortTeamName != null" >
        #{shortTeamName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.BasketballTeam2" >
    update basketball_team
    <set >
      <if test="fullTeamName != null" >
        FULL_TEAM_NAME = #{fullTeamName,jdbcType=VARCHAR},
      </if>
      <if test="shortTeamName != null" >
        SHORT_TEAM_NAME = #{shortTeamName,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        MARK = #{mark,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.BasketballTeam2" >
    update basketball_team
    set FULL_TEAM_NAME = #{fullTeamName,jdbcType=VARCHAR},
      SHORT_TEAM_NAME = #{shortTeamName,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      MARK = #{mark,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BasketBallTeam" type="com.qiyun.model.basketball.BasketBallTeam">
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="FULL_TEAM_NAME" property="fullTeamName" jdbcType="VARCHAR" />
    <result column="SHORT_TEAM_NAME" property="shortTeamName" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="MARK" property="mark" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectByFullName" resultMap="BasketBallTeam">
    select
    <include refid="Base_Column_List" />
    from basketball_team
    where FULL_TEAM_NAME = #{name, jdbcType=VARCHAR}
  </select>
</mapper>