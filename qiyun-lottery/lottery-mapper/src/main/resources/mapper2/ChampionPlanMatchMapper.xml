<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyun.mapper2.ChampionPlanMatchMapper">
  <resultMap id="BaseResultMap" type="com.qiyun.model2.ChampionPlanMatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="sp" jdbcType="DECIMAL" property="sp" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, plan_id, team_id, sp, status, order_no
  </sql>
  <select id="selectByExample" parameterType="com.qiyun.model2.ChampionPlanMatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from champion_plan_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from champion_plan_match
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from champion_plan_match
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.ChampionPlanMatch">
    insert into champion_plan_match (id, plan_id, team_id, 
      sp, status, order_no
      )
    values (#{id,jdbcType=INTEGER}, #{planId,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, 
      #{sp,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.ChampionPlanMatch">
    insert into champion_plan_match
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="sp != null">
        sp,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="sp != null">
        #{sp,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.ChampionPlanMatch">
    update champion_plan_match
    <set>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="sp != null">
        sp = #{sp,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.ChampionPlanMatch">
    update champion_plan_match
    set plan_id = #{planId,jdbcType=INTEGER},
      team_id = #{teamId,jdbcType=INTEGER},
      sp = #{sp,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByTeamId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from champion_plan_match
    where team_id = #{teamId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT
        PM.*
    FROM
        champion_plan_match PM
    LEFT JOIN champion_plan P ON PM.plan_id = P.id
    WHERE
        P.type = #{type,jdbcType=INTEGER}
    AND PM.`status` = 0
  </select>
  <resultMap id="championPlanMatchDTO" type="com.qiyun.dto.ChampionPlanMatchDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="team_name" jdbcType="VARCHAR" property="teamName" />
    <result column="sp" jdbcType="DECIMAL" property="sp" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
  </resultMap>
  <select id="selectMatchByPlanId" resultMap="championPlanMatchDTO">
    SELECT
        PM.*, M.team_name
    FROM
        champion_plan_match PM
    LEFT JOIN champion_match M ON PM.team_id = M.team_id
    WHERE
        PM.plan_id = #{planId,jdbcType=INTEGER}
  </select>
  <select id="selectMatchUpByPlanId" resultMap="championPlanMatchDTO">
    SELECT
        PM.*, MU.team_name
    FROM
        champion_plan_match PM
    LEFT JOIN champion_match_up MU ON PM.team_id = MU.team_id
    WHERE
        PM.plan_id = #{planId,jdbcType=INTEGER}
  </select>
</mapper>