package com.qiyun.grabber.football;


import com.qiyun.util.NumberTools;

import java.util.Date;

/**
 * AbstractLotteryDcSpfaward generated by MyEclipse Persistence Tools
 */

public abstract class AbstractLotteryDcSpfaward implements java.io.Serializable {

	// Fields

	private Integer id;

	private Integer matchId;

	private Integer dcId;

	private Double homeWinAward;

	private Double guestWinAward;

	private Double drawAward;

	private Date lastUpdateTime;

	// Constructors

	/** default constructor */
	public AbstractLotteryDcSpfaward() {
		this.homeWinAward = 0d;
		this.guestWinAward = 0d;
		this.drawAward = 0d;
	}

	/** full constructor */
	public AbstractLotteryDcSpfaward(Integer matchId, Integer dcId, Double homeWinAward, Double guestWinAward, Double drawAward, Date lastUpdateTime) {
		this.matchId = matchId;
		this.dcId = dcId;
		this.homeWinAward = homeWinAward;
		this.guestWinAward = guestWinAward;
		this.drawAward = drawAward;
		this.lastUpdateTime = lastUpdateTime;
	}

	// Property accessors

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getMatchId() {
		return this.matchId;
	}

	public void setMatchId(Integer matchId) {
		this.matchId = matchId;
	}

	public Integer getDcId() {
		return this.dcId;
	}

	public void setDcId(Integer dcId) {
		this.dcId = dcId;
	}

	public Double getHomeWinAward() {

		return this.homeWinAward;
	}

	public Double getHomeWinAwardStr() {
		return NumberTools.formatDouble(this.homeWinAward, 2);
	}

	public void setHomeWinAward(Double homeWinAward) {
		if (homeWinAward != 0)
			this.homeWinAward = homeWinAward;
	}

	public Double getGuestWinAward() {
		return this.guestWinAward;
	}

	public Double getGuestWinAwardStr() {
		return NumberTools.formatDouble(this.guestWinAward, 2);
	}

	public void setGuestWinAward(Double guestWinAward) {
		if (guestWinAward != 0)
			this.guestWinAward = guestWinAward;
	}

	public Double getDrawAward() {
		return this.drawAward;
	}

	public Double getDrawAwardStr() {
		return NumberTools.formatDouble(this.drawAward, 2);
	}

	public void setDrawAward(Double drawAward) {
		if (drawAward != 0)
			this.drawAward = drawAward;
	}

	public Date getLastUpdateTime() {
		return this.lastUpdateTime;
	}

	public void setLastUpdateTime(Date lastUpdateTime) {
		this.lastUpdateTime = lastUpdateTime;
	}

	public double[] getAwardArr() {
		return new double[] { this.homeWinAward, this.drawAward, this.guestWinAward };
	}

	public void setAwardArr(double[] awards) {
		if (awards != null) {
			if (awards.length != 3)
				throw new RuntimeException("数组长度错误，请重新设值");
			setHomeWinAward(awards[0]);
			setDrawAward(awards[1]);
			setGuestWinAward(awards[2]);
		}
	}

}