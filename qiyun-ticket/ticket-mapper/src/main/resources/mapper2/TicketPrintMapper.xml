<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.TicketPrintMapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.TicketPrint" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="plan_no" property="planNo" jdbcType="INTEGER" />
    <result column="passType" property="passtype" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="multiple" property="multiple" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="bonus" property="bonus" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="residue_count" property="residueCount" jdbcType="INTEGER" />
    <result column="print_id" property="printId" jdbcType="VARCHAR" />
    <result column="print_account" property="printAccount" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="push_time" property="pushTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="deal_time" property="dealTime" jdbcType="TIMESTAMP" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="lottery_type" property="lotteryType" jdbcType="INTEGER" />
    <result column="dl_account" property="dlAccount" jdbcType="VARCHAR" />
    <result column="qd_account" property="qdAccount" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qiyun.model2.TicketPrint" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, plan_no, passType, amount, multiple, count, bonus, status, residue_count, 
    print_id, print_account, create_time, push_time, finish_time, deal_time, weight, 
    lottery_type, dl_account, qd_account
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qiyun.model2.TicketPrintQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ticket_print
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.TicketPrintQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_print
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ticket_print
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_print
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyun.model2.TicketPrintQuery" >
    delete from ticket_print
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.TicketPrint" useGeneratedKeys="true" keyProperty="id" >
    insert into ticket_print (id, account, plan_no, 
      passType, amount, multiple, 
      count, bonus, status, 
      residue_count, print_id, print_account, 
      create_time, push_time, finish_time, 
      deal_time, weight, lottery_type, 
      dl_account, qd_account, content
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{planNo,jdbcType=INTEGER}, 
      #{passtype,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{multiple,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{bonus,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{residueCount,jdbcType=INTEGER}, #{printId,jdbcType=VARCHAR}, #{printAccount,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{pushTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{dealTime,jdbcType=TIMESTAMP}, #{weight,jdbcType=INTEGER}, #{lotteryType,jdbcType=INTEGER}, 
      #{dlAccount,jdbcType=VARCHAR}, #{qdAccount,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.TicketPrint" useGeneratedKeys="true" keyProperty="id">
    insert into ticket_print
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="planNo != null" >
        plan_no,
      </if>
      <if test="passtype != null" >
        passType,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="multiple != null" >
        multiple,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="bonus != null" >
        bonus,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="residueCount != null" >
        residue_count,
      </if>
      <if test="printId != null" >
        print_id,
      </if>
      <if test="printAccount != null" >
        print_account,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="pushTime != null" >
        push_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="dealTime != null" >
        deal_time,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="lotteryType != null" >
        lottery_type,
      </if>
      <if test="dlAccount != null" >
        dl_account,
      </if>
      <if test="qdAccount != null" >
        qd_account,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="planNo != null" >
        #{planNo,jdbcType=INTEGER},
      </if>
      <if test="passtype != null" >
        #{passtype,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="multiple != null" >
        #{multiple,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="bonus != null" >
        #{bonus,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="residueCount != null" >
        #{residueCount,jdbcType=INTEGER},
      </if>
      <if test="printId != null" >
        #{printId,jdbcType=VARCHAR},
      </if>
      <if test="printAccount != null" >
        #{printAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTime != null" >
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="lotteryType != null" >
        #{lotteryType,jdbcType=INTEGER},
      </if>
      <if test="dlAccount != null" >
        #{dlAccount,jdbcType=VARCHAR},
      </if>
      <if test="qdAccount != null" >
        #{qdAccount,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyun.model2.TicketPrintQuery" resultType="java.lang.Integer" >
    select count(*) from ticket_print
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_print
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.planNo != null" >
        plan_no = #{record.planNo,jdbcType=INTEGER},
      </if>
      <if test="record.passtype != null" >
        passType = #{record.passtype,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.multiple != null" >
        multiple = #{record.multiple,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.bonus != null" >
        bonus = #{record.bonus,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.residueCount != null" >
        residue_count = #{record.residueCount,jdbcType=INTEGER},
      </if>
      <if test="record.printId != null" >
        print_id = #{record.printId,jdbcType=VARCHAR},
      </if>
      <if test="record.printAccount != null" >
        print_account = #{record.printAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushTime != null" >
        push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null" >
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealTime != null" >
        deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.lotteryType != null" >
        lottery_type = #{record.lotteryType,jdbcType=INTEGER},
      </if>
      <if test="record.dlAccount != null" >
        dl_account = #{record.dlAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.qdAccount != null" >
        qd_account = #{record.qdAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ticket_print
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      plan_no = #{record.planNo,jdbcType=INTEGER},
      passType = #{record.passtype,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      multiple = #{record.multiple,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      bonus = #{record.bonus,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      residue_count = #{record.residueCount,jdbcType=INTEGER},
      print_id = #{record.printId,jdbcType=VARCHAR},
      print_account = #{record.printAccount,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      weight = #{record.weight,jdbcType=INTEGER},
      lottery_type = #{record.lotteryType,jdbcType=INTEGER},
      dl_account = #{record.dlAccount,jdbcType=VARCHAR},
      qd_account = #{record.qdAccount,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_print
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      plan_no = #{record.planNo,jdbcType=INTEGER},
      passType = #{record.passtype,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      multiple = #{record.multiple,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      bonus = #{record.bonus,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      residue_count = #{record.residueCount,jdbcType=INTEGER},
      print_id = #{record.printId,jdbcType=VARCHAR},
      print_account = #{record.printAccount,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      weight = #{record.weight,jdbcType=INTEGER},
      lottery_type = #{record.lotteryType,jdbcType=INTEGER},
      dl_account = #{record.dlAccount,jdbcType=VARCHAR},
      qd_account = #{record.qdAccount,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.TicketPrint" >
    update ticket_print
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="planNo != null" >
        plan_no = #{planNo,jdbcType=INTEGER},
      </if>
      <if test="passtype != null" >
        passType = #{passtype,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="multiple != null" >
        multiple = #{multiple,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="bonus != null" >
        bonus = #{bonus,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="residueCount != null" >
        residue_count = #{residueCount,jdbcType=INTEGER},
      </if>
      <if test="printId != null" >
        print_id = #{printId,jdbcType=VARCHAR},
      </if>
      <if test="printAccount != null" >
        print_account = #{printAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTime != null" >
        push_time = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null" >
        deal_time = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="lotteryType != null" >
        lottery_type = #{lotteryType,jdbcType=INTEGER},
      </if>
      <if test="dlAccount != null" >
        dl_account = #{dlAccount,jdbcType=VARCHAR},
      </if>
      <if test="qdAccount != null" >
        qd_account = #{qdAccount,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qiyun.model2.TicketPrint" >
    update ticket_print
    set account = #{account,jdbcType=VARCHAR},
      plan_no = #{planNo,jdbcType=INTEGER},
      passType = #{passtype,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      multiple = #{multiple,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      bonus = #{bonus,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      residue_count = #{residueCount,jdbcType=INTEGER},
      print_id = #{printId,jdbcType=VARCHAR},
      print_account = #{printAccount,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      weight = #{weight,jdbcType=INTEGER},
      lottery_type = #{lotteryType,jdbcType=INTEGER},
      dl_account = #{dlAccount,jdbcType=VARCHAR},
      qd_account = #{qdAccount,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.TicketPrint" >
    update ticket_print
    set account = #{account,jdbcType=VARCHAR},
      plan_no = #{planNo,jdbcType=INTEGER},
      passType = #{passtype,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      multiple = #{multiple,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      bonus = #{bonus,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      residue_count = #{residueCount,jdbcType=INTEGER},
      print_id = #{printId,jdbcType=VARCHAR},
      print_account = #{printAccount,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      weight = #{weight,jdbcType=INTEGER},
      lottery_type = #{lotteryType,jdbcType=INTEGER},
      dl_account = #{dlAccount,jdbcType=VARCHAR},
      qd_account = #{qdAccount,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getTotalCountGroupByDealTime" resultType="map">
    SELECT
	 DATE_FORMAT(deal_time,'%Y-%m-%d %H:%i:%s') date,count(1) count
    FROM
        ticket_print
    WHERE
        DATE_FORMAT(deal_time,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')
    GROUP BY
        deal_time
    ORDER BY
        deal_time
  </select>
  <select id="getCountByStatusGroupByDealTime" resultType="map">
    SELECT
    DATE_FORMAT(deal_time,'%Y-%m-%d %H:%i:%s') date,count(1) count
    FROM
    ticket_print
    WHERE
    DATE_FORMAT(deal_time,'%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')
    AND `status` = #{0}
    GROUP BY
    deal_time
    ORDER BY
    deal_time
  </select>
</mapper>