<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.TicketOperationLineMapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.TicketOperationLine" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="trans_type" property="transType" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="ticket_id" property="ticketId" jdbcType="INTEGER" />
    <result column="ticket_count" property="ticketCount" jdbcType="INTEGER" />
    <result column="ticket_apparatus_id" property="ticketApparatusId" jdbcType="VARCHAR" />
    <result column="ticket_apparatus_able_balance" property="ticketApparatusAbleBalance" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, create_time, trans_type, amount, ticket_id, ticket_count, ticket_apparatus_id, 
    ticket_apparatus_able_balance, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.TicketOperationLineQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_operation_line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ticket_operation_line
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_operation_line
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyun.model2.TicketOperationLineQuery" >
    delete from ticket_operation_line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.TicketOperationLine" >
    insert into ticket_operation_line (id, account, create_time, 
      trans_type, amount, ticket_id, 
      ticket_count, ticket_apparatus_id, ticket_apparatus_able_balance, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{transType,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{ticketId,jdbcType=INTEGER}, 
      #{ticketCount,jdbcType=INTEGER}, #{ticketApparatusId,jdbcType=VARCHAR}, #{ticketApparatusAbleBalance,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.TicketOperationLine" >
    insert into ticket_operation_line
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="transType != null" >
        trans_type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="ticketId != null" >
        ticket_id,
      </if>
      <if test="ticketCount != null" >
        ticket_count,
      </if>
      <if test="ticketApparatusId != null" >
        ticket_apparatus_id,
      </if>
      <if test="ticketApparatusAbleBalance != null" >
        ticket_apparatus_able_balance,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transType != null" >
        #{transType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="ticketId != null" >
        #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="ticketCount != null" >
        #{ticketCount,jdbcType=INTEGER},
      </if>
      <if test="ticketApparatusId != null" >
        #{ticketApparatusId,jdbcType=VARCHAR},
      </if>
      <if test="ticketApparatusAbleBalance != null" >
        #{ticketApparatusAbleBalance,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyun.model2.TicketOperationLineQuery" resultType="java.lang.Integer" >
    select count(*) from ticket_operation_line
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_operation_line
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transType != null" >
        trans_type = #{record.transType,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.ticketId != null" >
        ticket_id = #{record.ticketId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketCount != null" >
        ticket_count = #{record.ticketCount,jdbcType=INTEGER},
      </if>
      <if test="record.ticketApparatusId != null" >
        ticket_apparatus_id = #{record.ticketApparatusId,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketApparatusAbleBalance != null" >
        ticket_apparatus_able_balance = #{record.ticketApparatusAbleBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_operation_line
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      trans_type = #{record.transType,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      ticket_id = #{record.ticketId,jdbcType=INTEGER},
      ticket_count = #{record.ticketCount,jdbcType=INTEGER},
      ticket_apparatus_id = #{record.ticketApparatusId,jdbcType=VARCHAR},
      ticket_apparatus_able_balance = #{record.ticketApparatusAbleBalance,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.TicketOperationLine" >
    update ticket_operation_line
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transType != null" >
        trans_type = #{transType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="ticketId != null" >
        ticket_id = #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="ticketCount != null" >
        ticket_count = #{ticketCount,jdbcType=INTEGER},
      </if>
      <if test="ticketApparatusId != null" >
        ticket_apparatus_id = #{ticketApparatusId,jdbcType=VARCHAR},
      </if>
      <if test="ticketApparatusAbleBalance != null" >
        ticket_apparatus_able_balance = #{ticketApparatusAbleBalance,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.TicketOperationLine" >
    update ticket_operation_line
    set account = #{account,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      trans_type = #{transType,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      ticket_id = #{ticketId,jdbcType=INTEGER},
      ticket_count = #{ticketCount,jdbcType=INTEGER},
      ticket_apparatus_id = #{ticketApparatusId,jdbcType=VARCHAR},
      ticket_apparatus_able_balance = #{ticketApparatusAbleBalance,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getSumTicketCountByTypeAndDateAndAccountGroupByDate" resultType="Map"  >
    SELECT
    IFNULL(SUM(ticket_count),0) ticketCount,date_format(create_time, '%Y-%m-%d') date
    FROM
    ticket_operation_line
    WHERE
    date_format(create_time, '%Y-%m-%d') &gt;= #{0}
    AND date_format(create_time, '%Y-%m-%d') &lt;= #{1}
    AND trans_type = #{3}
    AND account = #{2}
    GROUP BY date_format(create_time, '%Y-%m-%d')
  </select>
  <select id="getSumAmountByTypeAndDateAndAccountGroupByDate" resultType="Map"  >
    SELECT
    IFNULL(SUM(amount),0) sumAmount,date_format(create_time, '%Y-%m-%d') date
    FROM
    ticket_operation_line
    WHERE
    date_format(create_time, '%Y-%m-%d') &gt;= #{0}
    AND date_format(create_time, '%Y-%m-%d') &lt;= #{1}
    AND trans_type = #{3}
    AND account = #{2}
    GROUP BY date_format(create_time, '%Y-%m-%d')
  </select>
  <select id="getSumTicketCountByTypeAndDateGroupByDate" resultType="Map"  >
    SELECT
    IFNULL(SUM(ticket_count),0) ticketCount,date_format(create_time, '%Y-%m-%d') date
    FROM
    ticket_operation_line
    WHERE
    date_format(create_time, '%Y-%m-%d') &gt;= #{0}
    AND date_format(create_time, '%Y-%m-%d') &lt;= #{1}
    AND trans_type = #{2}
    GROUP BY date_format(create_time, '%Y-%m-%d')
  </select>
  <select id="getSumAmountByTypeAndDateGroupByDate" resultType="Map"  >
    SELECT
    IFNULL(SUM(amount),0) sumAmount,date_format(create_time, '%Y-%m-%d') date
    FROM
    ticket_operation_line
    WHERE
    date_format(create_time, '%Y-%m-%d') &gt;= #{0}
    AND date_format(create_time, '%Y-%m-%d') &lt;= #{1}
    AND trans_type = #{2}
    GROUP BY date_format(create_time, '%Y-%m-%d')
  </select>
  <select id="getSumAmountByTypeAndDate" resultType="DECIMAL"  >
    SELECT
    IFNULL(SUM(amount),0) sumAmount
    FROM
    ticket_operation_line
    WHERE
    date_format(create_time, '%Y-%m-%d') &gt;= #{0}
    AND date_format(create_time, '%Y-%m-%d') &lt;= #{1}
    AND trans_type = #{2}
    AND account = #{3}
  </select>
  <select id="getSumTicketCountByTypeAndDate" resultType="INTEGER"  >
     SELECT
    IFNULL(SUM(ticket_count),0) ticketCount
    FROM
    ticket_operation_line
    WHERE
    date_format(create_time, '%Y-%m-%d') &gt;= #{0}
    AND date_format(create_time, '%Y-%m-%d') &lt;= #{1}
    AND trans_type = #{2}
    AND account = #{3}
  </select>
</mapper>