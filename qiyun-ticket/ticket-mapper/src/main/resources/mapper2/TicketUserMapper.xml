<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.TicketUserMapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.TicketUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="push_count" property="pushCount" jdbcType="INTEGER" />
    <result column="revocation_count" property="revocationCount" jdbcType="INTEGER" />
    <result column="dispose_count" property="disposeCount" jdbcType="INTEGER" />
    <result column="add_balance" property="addBalance" jdbcType="DECIMAL" />
    <result column="push_amount" property="pushAmount" jdbcType="DECIMAL" />
    <result column="revocation_amount" property="revocationAmount" jdbcType="DECIMAL" />
    <result column="dispose_amount" property="disposeAmount" jdbcType="DECIMAL" />
    <result column="bingo_amount" property="bingoAmount" jdbcType="DECIMAL" />
    <result column="ticket_id" property="ticketId" jdbcType="INTEGER" />
    <result column="ticket_apparatus_id" property="ticketApparatusId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, type, push_count, revocation_count, dispose_count, add_balance, push_amount, 
    revocation_amount, dispose_amount, bingo_amount, ticket_id, ticket_apparatus_id, 
    status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.TicketUserQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ticket_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyun.model2.TicketUserQuery" >
    delete from ticket_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.TicketUser" >
    insert into ticket_user (id, account, type, 
      push_count, revocation_count, dispose_count, 
      add_balance, push_amount, revocation_amount, 
      dispose_amount, bingo_amount, ticket_id, 
      ticket_apparatus_id, status)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{pushCount,jdbcType=INTEGER}, #{revocationCount,jdbcType=INTEGER}, #{disposeCount,jdbcType=INTEGER}, 
      #{addBalance,jdbcType=DECIMAL}, #{pushAmount,jdbcType=DECIMAL}, #{revocationAmount,jdbcType=DECIMAL}, 
      #{disposeAmount,jdbcType=DECIMAL}, #{bingoAmount,jdbcType=DECIMAL}, #{ticketId,jdbcType=INTEGER}, 
      #{ticketApparatusId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.TicketUser" >
    insert into ticket_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pushCount != null" >
        push_count,
      </if>
      <if test="revocationCount != null" >
        revocation_count,
      </if>
      <if test="disposeCount != null" >
        dispose_count,
      </if>
      <if test="addBalance != null" >
        add_balance,
      </if>
      <if test="pushAmount != null" >
        push_amount,
      </if>
      <if test="revocationAmount != null" >
        revocation_amount,
      </if>
      <if test="disposeAmount != null" >
        dispose_amount,
      </if>
      <if test="bingoAmount != null" >
        bingo_amount,
      </if>
      <if test="ticketId != null" >
        ticket_id,
      </if>
      <if test="ticketApparatusId != null" >
        ticket_apparatus_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="pushCount != null" >
        #{pushCount,jdbcType=INTEGER},
      </if>
      <if test="revocationCount != null" >
        #{revocationCount,jdbcType=INTEGER},
      </if>
      <if test="disposeCount != null" >
        #{disposeCount,jdbcType=INTEGER},
      </if>
      <if test="addBalance != null" >
        #{addBalance,jdbcType=DECIMAL},
      </if>
      <if test="pushAmount != null" >
        #{pushAmount,jdbcType=DECIMAL},
      </if>
      <if test="revocationAmount != null" >
        #{revocationAmount,jdbcType=DECIMAL},
      </if>
      <if test="disposeAmount != null" >
        #{disposeAmount,jdbcType=DECIMAL},
      </if>
      <if test="bingoAmount != null" >
        #{bingoAmount,jdbcType=DECIMAL},
      </if>
      <if test="ticketId != null" >
        #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="ticketApparatusId != null" >
        #{ticketApparatusId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyun.model2.TicketUserQuery" resultType="java.lang.Integer" >
    select count(*) from ticket_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.pushCount != null" >
        push_count = #{record.pushCount,jdbcType=INTEGER},
      </if>
      <if test="record.revocationCount != null" >
        revocation_count = #{record.revocationCount,jdbcType=INTEGER},
      </if>
      <if test="record.disposeCount != null" >
        dispose_count = #{record.disposeCount,jdbcType=INTEGER},
      </if>
      <if test="record.addBalance != null" >
        add_balance = #{record.addBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.pushAmount != null" >
        push_amount = #{record.pushAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.revocationAmount != null" >
        revocation_amount = #{record.revocationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.disposeAmount != null" >
        dispose_amount = #{record.disposeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.bingoAmount != null" >
        bingo_amount = #{record.bingoAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.ticketId != null" >
        ticket_id = #{record.ticketId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketApparatusId != null" >
        ticket_apparatus_id = #{record.ticketApparatusId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      push_count = #{record.pushCount,jdbcType=INTEGER},
      revocation_count = #{record.revocationCount,jdbcType=INTEGER},
      dispose_count = #{record.disposeCount,jdbcType=INTEGER},
      add_balance = #{record.addBalance,jdbcType=DECIMAL},
      push_amount = #{record.pushAmount,jdbcType=DECIMAL},
      revocation_amount = #{record.revocationAmount,jdbcType=DECIMAL},
      dispose_amount = #{record.disposeAmount,jdbcType=DECIMAL},
      bingo_amount = #{record.bingoAmount,jdbcType=DECIMAL},
      ticket_id = #{record.ticketId,jdbcType=INTEGER},
      ticket_apparatus_id = #{record.ticketApparatusId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.TicketUser" >
    update ticket_user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="pushCount != null" >
        push_count = #{pushCount,jdbcType=INTEGER},
      </if>
      <if test="revocationCount != null" >
        revocation_count = #{revocationCount,jdbcType=INTEGER},
      </if>
      <if test="disposeCount != null" >
        dispose_count = #{disposeCount,jdbcType=INTEGER},
      </if>
      <if test="addBalance != null" >
        add_balance = #{addBalance,jdbcType=DECIMAL},
      </if>
      <if test="pushAmount != null" >
        push_amount = #{pushAmount,jdbcType=DECIMAL},
      </if>
      <if test="revocationAmount != null" >
        revocation_amount = #{revocationAmount,jdbcType=DECIMAL},
      </if>
      <if test="disposeAmount != null" >
        dispose_amount = #{disposeAmount,jdbcType=DECIMAL},
      </if>
      <if test="bingoAmount != null" >
        bingo_amount = #{bingoAmount,jdbcType=DECIMAL},
      </if>
      <if test="ticketId != null" >
        ticket_id = #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="ticketApparatusId != null" >
        ticket_apparatus_id = #{ticketApparatusId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.TicketUser" >
    update ticket_user
    set account = #{account,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      push_count = #{pushCount,jdbcType=INTEGER},
      revocation_count = #{revocationCount,jdbcType=INTEGER},
      dispose_count = #{disposeCount,jdbcType=INTEGER},
      add_balance = #{addBalance,jdbcType=DECIMAL},
      push_amount = #{pushAmount,jdbcType=DECIMAL},
      revocation_amount = #{revocationAmount,jdbcType=DECIMAL},
      dispose_amount = #{disposeAmount,jdbcType=DECIMAL},
      bingo_amount = #{bingoAmount,jdbcType=DECIMAL},
      ticket_id = #{ticketId,jdbcType=INTEGER},
      ticket_apparatus_id = #{ticketApparatusId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>