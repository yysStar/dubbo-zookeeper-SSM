<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiyun.mapper2.TicketNotifySpMapper">
  <resultMap id="BaseResultMap" type="com.qiyun.model.TicketNotifySp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="match_id" jdbcType="VARCHAR" property="matchId" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="sp" jdbcType="DECIMAL" property="sp" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="vs_type" jdbcType="VARCHAR" property="vsType" />
    <result column="let_point" jdbcType="VARCHAR" property="letPoint" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, match_id, score, sp, order_id, vs_type, let_point
  </sql>
  <select id="selectByExample" parameterType="com.qiyun.model.TicketNotifySpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ticket_notify_sp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket_notify_sp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket_notify_sp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qiyun.model.TicketNotifySp">
    insert into ticket_notify_sp (id, match_id, score, 
      sp, order_id, vs_type, 
      let_point)
    values (#{id,jdbcType=INTEGER}, #{matchId,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, 
      #{sp,jdbcType=DECIMAL}, #{orderId,jdbcType=VARCHAR}, #{vsType,jdbcType=VARCHAR}, 
      #{letPoint,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model.TicketNotifySp">
    insert into ticket_notify_sp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="matchId != null">
        match_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="sp != null">
        sp,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="vsType != null">
        vs_type,
      </if>
      <if test="letPoint != null">
        let_point,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="matchId != null">
        #{matchId,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="sp != null">
        #{sp,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="vsType != null">
        #{vsType,jdbcType=VARCHAR},
      </if>
      <if test="letPoint != null">
        #{letPoint,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model.TicketNotifySp">
    update ticket_notify_sp
    <set>
      <if test="matchId != null">
        match_id = #{matchId,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="sp != null">
        sp = #{sp,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="vsType != null">
        vs_type = #{vsType,jdbcType=VARCHAR},
      </if>
      <if test="letPoint != null">
        let_point = #{letPoint,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model.TicketNotifySp">
    update ticket_notify_sp
    set match_id = #{matchId,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      sp = #{sp,jdbcType=DECIMAL},
      order_id = #{orderId,jdbcType=VARCHAR},
      vs_type = #{vsType,jdbcType=VARCHAR},
      let_point = #{letPoint,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByOrderId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ticket_notify_sp
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
</mapper>