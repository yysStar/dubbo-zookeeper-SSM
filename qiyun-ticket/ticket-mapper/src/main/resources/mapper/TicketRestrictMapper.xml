<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper.TicketRestrictMapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model.TicketRestrict" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="credit" property="credit" jdbcType="DECIMAL" />
    <result column="lot_ids" property="lotIds" jdbcType="VARCHAR" />
    <result column="sp" property="sp" jdbcType="DECIMAL" />
    <result column="is_effective" property="isEffective" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, credit, lot_ids, sp, is_effective
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model.TicketRestrictExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ticket_restrict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ticket_restrict
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_restrict
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qiyun.model.TicketRestrict" >
    insert into ticket_restrict (id, credit, lot_ids, 
      sp, is_effective)
    values (#{id,jdbcType=INTEGER}, #{credit,jdbcType=DECIMAL}, #{lotIds,jdbcType=VARCHAR}, 
      #{sp,jdbcType=DECIMAL}, #{isEffective,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model.TicketRestrict" >
    insert into ticket_restrict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="lotIds != null" >
        lot_ids,
      </if>
      <if test="sp != null" >
        sp,
      </if>
      <if test="isEffective != null" >
        is_effective,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=DECIMAL},
      </if>
      <if test="lotIds != null" >
        #{lotIds,jdbcType=VARCHAR},
      </if>
      <if test="sp != null" >
        #{sp,jdbcType=DECIMAL},
      </if>
      <if test="isEffective != null" >
        #{isEffective,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model.TicketRestrict" >
    update ticket_restrict
    <set >
      <if test="credit != null" >
        credit = #{credit,jdbcType=DECIMAL},
      </if>
      <if test="lotIds != null" >
        lot_ids = #{lotIds,jdbcType=VARCHAR},
      </if>
      <if test="sp != null" >
        sp = #{sp,jdbcType=DECIMAL},
      </if>
      <if test="isEffective != null" >
        is_effective = #{isEffective,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model.TicketRestrict" >
    update ticket_restrict
    set credit = #{credit,jdbcType=DECIMAL},
      lot_ids = #{lotIds,jdbcType=VARCHAR},
      sp = #{sp,jdbcType=DECIMAL},
      is_effective = #{isEffective,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByStatus" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from ticket_restrict
    where is_effective = 1
  </select>
</mapper>