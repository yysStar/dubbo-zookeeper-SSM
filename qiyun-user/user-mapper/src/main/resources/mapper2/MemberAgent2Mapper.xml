<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiyun.mapper2.MemberAgent2Mapper" >
  <resultMap id="BaseResultMap" type="com.qiyun.model2.MemberAgent2" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="MEMBER_ID" property="memberId" jdbcType="INTEGER" />
    <result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="CREATE_DATE_TIME" property="createDateTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="AGENT_TYPE" property="agentType" jdbcType="INTEGER" />
    <result column="IS_SET_RATE" property="isSetRate" jdbcType="INTEGER" />
    <result column="ACTIVE_CODE" property="activeCode" jdbcType="VARCHAR" />
    <result column="pay_pass" property="payPass" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qiyun.model2.MemberAgent2" extends="BaseResultMap" >
    <result column="REMARK" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, MEMBER_ID, ACCOUNT, NAME, MOBILE, CREATE_DATE_TIME, STATUS, AGENT_TYPE, IS_SET_RATE, 
    ACTIVE_CODE,pay_pass
  </sql>
  <sql id="Blob_Column_List" >
    REMARK
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qiyun.model2.MemberAgent2Query" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member_agent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qiyun.model2.MemberAgent2Query" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_agent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member_agent
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_agent
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiyun.model2.MemberAgent2Query" >
    delete from member_agent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiyun.model2.MemberAgent2" >
    insert into member_agent (id, MEMBER_ID, ACCOUNT, 
      NAME, MOBILE, CREATE_DATE_TIME, 
      STATUS, AGENT_TYPE, IS_SET_RATE, 
      ACTIVE_CODE, REMARK)
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{createDateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{agentType,jdbcType=INTEGER}, #{isSetRate,jdbcType=INTEGER}, 
      #{activeCode,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiyun.model2.MemberAgent2" >
    insert into member_agent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        MEMBER_ID,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="mobile != null" >
        MOBILE,
      </if>
      <if test="createDateTime != null" >
        CREATE_DATE_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="agentType != null" >
        AGENT_TYPE,
      </if>
      <if test="isSetRate != null" >
        IS_SET_RATE,
      </if>
      <if test="activeCode != null" >
        ACTIVE_CODE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null" >
        #{createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="agentType != null" >
        #{agentType,jdbcType=INTEGER},
      </if>
      <if test="isSetRate != null" >
        #{isSetRate,jdbcType=INTEGER},
      </if>
      <if test="activeCode != null" >
        #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiyun.model2.MemberAgent2Query" resultType="java.lang.Integer" >
    select count(*) from member_agent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_agent
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        MEMBER_ID = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.createDateTime != null" >
        CREATE_DATE_TIME = #{record.createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.agentType != null" >
        AGENT_TYPE = #{record.agentType,jdbcType=INTEGER},
      </if>
      <if test="record.isSetRate != null" >
        IS_SET_RATE = #{record.isSetRate,jdbcType=INTEGER},
      </if>
      <if test="record.activeCode != null" >
        ACTIVE_CODE = #{record.activeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update member_agent
    set id = #{record.id,jdbcType=INTEGER},
      MEMBER_ID = #{record.memberId,jdbcType=INTEGER},
      ACCOUNT = #{record.account,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      CREATE_DATE_TIME = #{record.createDateTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=INTEGER},
      AGENT_TYPE = #{record.agentType,jdbcType=INTEGER},
      IS_SET_RATE = #{record.isSetRate,jdbcType=INTEGER},
      ACTIVE_CODE = #{record.activeCode,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_agent
    set id = #{record.id,jdbcType=INTEGER},
      MEMBER_ID = #{record.memberId,jdbcType=INTEGER},
      ACCOUNT = #{record.account,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      CREATE_DATE_TIME = #{record.createDateTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=INTEGER},
      AGENT_TYPE = #{record.agentType,jdbcType=INTEGER},
      IS_SET_RATE = #{record.isSetRate,jdbcType=INTEGER},
      ACTIVE_CODE = #{record.activeCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiyun.model2.MemberAgent2" >
    update member_agent
    <set >
      <if test="memberId != null" >
        MEMBER_ID = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null" >
        CREATE_DATE_TIME = #{createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="agentType != null" >
        AGENT_TYPE = #{agentType,jdbcType=INTEGER},
      </if>
      <if test="isSetRate != null" >
        IS_SET_RATE = #{isSetRate,jdbcType=INTEGER},
      </if>
      <if test="activeCode != null" >
        ACTIVE_CODE = #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qiyun.model2.MemberAgent2" >
    update member_agent
    set MEMBER_ID = #{memberId,jdbcType=INTEGER},
      ACCOUNT = #{account,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      CREATE_DATE_TIME = #{createDateTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=INTEGER},
      AGENT_TYPE = #{agentType,jdbcType=INTEGER},
      IS_SET_RATE = #{isSetRate,jdbcType=INTEGER},
      ACTIVE_CODE = #{activeCode,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiyun.model2.MemberAgent2" >
    update member_agent
    set MEMBER_ID = #{memberId,jdbcType=INTEGER},
      ACCOUNT = #{account,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      CREATE_DATE_TIME = #{createDateTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=INTEGER},
      AGENT_TYPE = #{agentType,jdbcType=INTEGER},
      IS_SET_RATE = #{isSetRate,jdbcType=INTEGER},
      ACTIVE_CODE = #{activeCode,jdbcType=VARCHAR},
      pay_pass = #{payPass,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAgentList"  resultType="map" >
    SELECT
    m.id,
    m.account,
    m.username,
    m.mobile,
    m.name
    FROM
    member_agent ma,
    member m
    WHERE
    m.id = ma.MEMBER_ID
    AND ma.`status` = 1
    ORDER BY
    m.REGISTER_DATE_TIME DESC
  </select>
</mapper>